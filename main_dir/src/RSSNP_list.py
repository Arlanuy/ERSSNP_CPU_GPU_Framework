# List of sample RSSNPs

# AND
and_rssnp_minimal = {
    'neurons': 4,
    'synapses': 3,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 2, 1, 0],
        [2, 3, (1, 0), 1, 0, 0], 
    ],
    'init_config': [0, 0, 0, 0],
    'rule_status': [-1 for x in range(4)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

and_rssnp_adversarial = {
    'neurons': 7,
    'synapses': 10,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [1, 4, (1, 0), 1, 1, 0],
        [2, 6, (1, 2), 1, 0, 0],
        [2, 6, (2, 2), 2, 1, 0],
        [3, 0, (1, 0), 1, 1, 0],
        [3, 2, (1, 0), 1, 1, 0],
        [4, 2, (1, 0), 1, 1, 0],
        [4, 5, (1, 0), 1, 1, 0],
        [5, 1, (1, 0), 1, 1, 0],
    ],
    'init_config': [0, 0, 0, 0, 0, 0, 0],
    'rule_status': [-1 for x in range(11)],
    'input_neurons': [0, 1],
    'output_neuron': 6
}

and_rssnp_extra_rules = {
    'neurons': 4,
    'synapses': 3,
    'rules': [
        [0, 2, (2, 0), 2, 1, 0],
        [0, 2, (1, 0), 1, 1, 0],
        [1, 2, (2, 0), 2, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 2, 1, 0],
        [2, 3, (1, 0), 1, 0, 0], 
    ],
    'init_config': [0, 0, 0, 0],
    'rule_status': [-1 for x in range(6)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

# OR
or_rssnp_minimal = {
    'neurons': 4,
    'synapses': 3,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 3, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 2, 1, 0],
    ],
    'init_config': [0, 0, 0, 0],
    'rule_status': [-1 for x in range(4)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

or_rssnp_adversarial = {
    'neurons': 7,
    'synapses': 11,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 3, (1, 1), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [1, 5, (1, 1), 1, 1, 0],
        [3, 4, (1, 1), 1, 1, 0],
        [3, 5, (1, 1), 1, 1, 0],
        [4, 2, (1, 1), 1, 1, 0],
        [4, 3, (1, 1), 1, 1, 0],
        [5, 4, (1, 1), 1, 1, 0],
        [5, 1, (1, 1), 1, 1, 0],
        [2, 6, (1, 0), 1, 1, 0],
        [2, 6, (2, 0), 2, 1, 0],
    ],
    'init_config': [0, 0, 0, 0, 0, 0, 0],
    'rule_status': [-1 for x in range(12)],
    'input_neurons': [0, 1],
    'output_neuron': 6
}

or_rssnp_extra_rules = {
    'neurons': 4,
    'synapses': 3,
    'rules': [
        [0, 2, (2, 0), 2, 1, 0],
        [0, 2, (1, 0), 1, 1, 0],
        [1, 2, (2, 0), 2, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 2, 1, 0],
        [2, 3, (1, 0), 1, 1, 0], 
    ],
    'init_config': [0, 0, 0, 0],
    'rule_status': [-1 for x in range(6)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

# NOT
not_rssnp_minimal = {
    'neurons': 4,
    'synapses': 4,
    'rules': [
        [0, 3, (1, 0), 1, 1, 0],
        [0, 3, (2, 0), 2, 0, 0],
        [1, 0, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 1, (1, 0), 1, 1, 0],
    ],
    'init_config': [0, 1, 1, 0],
    'rule_status': [-1 for x in range(5)],
    'input_neurons': [0],
    'output_neuron': 3
}

not_rssnp_adversarial = {
    'neurons': 6,
    'synapses': 10,
    'rules': [
        [0, 1, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [0, 3, (2, 0), 2, 0, 0],
        [0, 4, (1, 0), 1, 1, 0],
        [1, 0, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 1, (1, 0), 1, 1, 0],
        [4, 2, (1, 0), 1, 1, 0],
        [4, 5, (1, 0), 1, 1, 0],
        [5, 2, (1, 0), 1, 1, 0],
        [5, 0, (1, 0), 1, 1, 0],
    ],
    'init_config': [0, 1, 1, 0, 0, 0],
    'rule_status': [-1 for x in range(11)],
    'input_neurons': [0],
    'output_neuron': 3
}

not_rssnp_extra_rules = {
    'neurons': 4,
    'synapses': 6,
    'rules': [
        [0, 1, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [0, 3, (2, 0), 2, 0, 0],
        [1, 0, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 0, (1, 0), 1, 1, 0],
        [2, 1, (1, 0), 1, 1, 0],
    ],
    'init_config': [0, 1, 1, 0],
    'rule_status': [-1 for x in range(7)],
    'input_neurons': [0],
    'output_neuron': 3
}

# ADD
add_rssnp_minimal = {
    'neurons': 4,
    'synapses': 3,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [2, 3, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 1, 0, 0],
        [2, 3, (3, 0), 2, 1, 0],
    ],
    'init_config': [0, 0, 0, 0],
    'rule_status': [-1 for x in range(5)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

add_rssnp_adversarial = {
    'neurons': 7,
    'synapses': 13,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [0, 4, (1, 0), 1, 1, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [1, 5, (1, 0), 1, 1, 0],
        [2, 3, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 1, 0, 0],
        [2, 3, (3, 0), 2, 1, 0],
        [4, 1, (1, 0), 1, 1, 0],
        [4, 2, (1, 0), 1, 1, 0],
        [4, 6, (1, 0), 1, 1, 0],
        [5, 1, (1, 0), 1, 1, 0],
        [5, 2, (1, 0), 1, 1, 0],
        [6, 1, (1, 0), 1, 1, 0],
        [6, 2, (1, 0), 1, 1, 0],
    ],
    'init_config': [0, 0, 0, 0, 0, 0, 0],
    'rule_status': [-1 for x in range(15)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

add_rssnp_extra_rules = {
    'neurons': 4,
    'synapses': 3,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 2, (2, 0), 2, 2, 0],
        [1, 2, (1, 0), 1, 1, 0],
        [1, 2, (2, 0), 2, 2, 0],
        [2, 3, (1, 0), 1, 1, 0],
        [2, 3, (2, 0), 1, 0, 0],
        [2, 3, (3, 0), 2, 1, 0],
    ],
    'init_config': [0, 0, 0, 0],
    'rule_status': [-1 for x in range(8)],
    'input_neurons': [0, 1],
    'output_neuron': 3
}

# SUB
sub_rssnp_minimal = {
    'neurons': 11,
    'synapses': 14,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [0, 4, (1, 0), 1, 1, 0],
        [1, 5, (1, 0), 1, 1, 0],
        [2, 9, (1, 0), 1, 1, 0],
        [3, 9, (1, 0), 1, 1, 0],
        [4, 9, (1, 0), 1, 1, 0],
        [5, 9, (1, 0), 1, 1, 0],
        [6, 7, (1, 0), 1, 1, 0],
        [6, 8, (1, 0), 1, 1, 0],
        [7, 8, (1, 0), 1, 1, 0],
        [7, 9, (1, 0), 1, 1, 0],
        [8, 7, (1, 0), 1, 1, 0],
        [9, 10, (1, 0), 1, 0, 0],
        [9, 10, (2, 0), 1, 1, 0],
        [9, 10, (3, 0), 2, 0, 0],
        [9, 10, (4, 0), 4, 1, 0],
        [9, 10, (5, 0), 5, 0, 0],
        [9, 10, (6, 0), 5, 1, 0],
    ],
    'init_config': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    'rule_status': [-1 for x in range(19)],
    'input_neurons': [0, 1],
    'output_neuron': 10
}

sub_rssnp_adversarial = {
    'neurons': 14,
    'synapses': 26,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [0, 4, (1, 0), 1, 1, 0],
        [1, 5, (1, 0), 1, 1, 0],
        [1, 11, (1, 0), 1, 1, 0],
        [2, 7, (1, 0), 1, 1, 0],
        [2, 9, (1, 0), 1, 1, 0],
        [3, 9, (1, 0), 1, 1, 0],
        [4, 9, (1, 0), 1, 1, 0],
        [5, 9, (1, 0), 1, 1, 0],
        [5, 9, (2, 0), 2, 0, 0],
        [6, 7, (1, 0), 1, 1, 0],
        [6, 8, (1, 0), 1, 1, 0],
        [6, 12, (1, 0), 1, 1, 0],
        [7, 5, (2, 0), 2, 1, 0],
        [7, 8, (1, 0), 1, 1, 0],
        [7, 9, (1, 0), 1, 1, 0],
        [7, 13, (2, 0), 2, 1, 0],
        [8, 7, (1, 0), 1, 1, 0],
        [8, 12, (1, 0), 1, 1, 0],
        [9, 10, (1, 0), 1, 0, 0],
        [9, 10, (2, 0), 1, 1, 0],
        [9, 10, (3, 0), 2, 0, 0],
        [9, 10, (4, 0), 4, 1, 0],
        [9, 10, (5, 0), 5, 0, 0],
        [9, 10, (6, 0), 5, 1, 0],
        [11, 9, (1, 0), 1, 1, 0],
        [12, 2, (1, 0), 1, 1, 0],
        [12, 3, (1, 0), 1, 1, 0],
        [12, 4, (1, 0), 1, 1, 0],
        [13, 0, (1, 0), 1, 1, 0],
        [13, 1, (1, 0), 1, 1, 0],

    ],
    'init_config': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    'rule_status': [-1 for x in range(32)],
    'input_neurons': [0, 1],
    'output_neuron': 10
}

sub_rssnp_extra_rules = {
    'neurons': 11,
    'synapses': 18,
    'rules': [
        [0, 2, (1, 0), 1, 1, 0],
        [0, 3, (1, 0), 1, 1, 0],
        [0, 4, (1, 0), 1, 1, 0],
        [1, 3, (1, 0), 1, 1, 0],
        [1, 5, (1, 0), 1, 1, 0],
        [2, 9, (1, 0), 1, 1, 0],
        [3, 9, (2, 0), 2, 2, 0],
        [3, 9, (1, 0), 1, 1, 0],
        [4, 5, (1, 0), 1, 1, 0],
        [4, 9, (1, 0), 1, 1, 0],
        [5, 9, (1, 0), 1, 1, 0],
        [5, 9, (2, 0), 2, 2, 0],
        [5, 9, (3, 0), 2, 1, 0],
        [6, 7, (1, 0), 1, 1, 0],
        [6, 8, (1, 0), 1, 1, 0],
        [7, 5, (1, 0), 1, 1, 0],
        [7, 8, (1, 0), 1, 1, 0],
        [7, 9, (1, 0), 1, 1, 0],
        [8, 6, (1, 0), 1, 1, 0],
        [8, 7, (1, 0), 1, 1, 0],
        [9, 10, (1, 0), 1, 0, 0],
        [9, 10, (2, 0), 1, 1, 0],
        [9, 10, (3, 0), 2, 0, 0],
        [9, 10, (4, 0), 4, 1, 0],
        [9, 10, (5, 0), 5, 0, 0],
        [9, 10, (6, 0), 5, 1, 0],
        [9, 10, (7, 0), 7, 1, 0],
        [9, 10, (8, 0), 8, 0, 0],
    ],
    'init_config': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    'rule_status': [-1 for x in range(28)],
    'input_neurons': [0, 1],
    'output_neuron': 10
}

# BITONIC
bitonic_rssnp_minimal = {
    'neurons': 28,
    'synapses': 42,
    'rules': [
      [0, 4, (0, 1), 1, 1, 0], 
      [0, 5, (0, 1), 1, 1, 0], 
      [1, 4, (0, 1), 1, 1, 0], 
      [1, 5, (0, 1), 1, 1, 0],
      [2, 6, (0, 1), 1, 1, 0], 
      [2, 7, (0, 1), 1, 1, 0], 
      [3, 6, (0, 1), 1, 1, 0], 
      [3, 7, (0, 1), 1, 1, 0],  
      [4, 8, (2, 0), 2, 1, 0],
      [4, 9, (2, 0), 2, 1, 0],
      [4, 8, (1, 0), 1, 0, 0],
      [4, 9, (1, 0), 1, 0, 0],
      [5, 9, (2, 0), 2, 0, 0 ],
      [5, 9, (1, 0), 1, 1, 0 ],
      [6, 10, (2, 0), 2, 1, 0],
      [6, 11, (2, 0), 2, 1, 0],
      [6, 10, (1, 0), 1, 0, 0],
      [6, 11, (1, 0), 1, 0, 0],
      [7, 10, (2, 0), 2, 0, 0 ],
      [7, 10, (1, 0), 1, 1, 0 ],
      [8, 12, (0, 1), 1, 1, 0], 
      [8, 13, (0, 1), 1, 1, 0], 
      [9, 12, (0, 1), 1, 1, 0], 
      [9, 13, (0, 1), 1, 1, 0],
      [10, 14, (0, 1), 1, 1, 0], 
      [10, 15, (0, 1), 1, 1, 0],
      [11, 14, (0, 1), 1, 1, 0], 
      [11, 15, (0, 1), 1, 1, 0],  
      [12, 16, (2, 0), 2, 1, 0],
      [12, 17, (2, 0), 2, 1, 0],
      [12, 16, (1, 0), 1, 0, 0],
      [12, 17, (1, 0), 1, 0, 0],
      [13, 17, (2, 0), 2, 0, 0],
      [13, 17, (1, 0), 1, 1, 0],
      [14, 18, (2, 0), 2, 1, 0],
      [14, 19, (2, 0), 2, 1, 0],
      [14, 18, (1, 0), 1, 0, 0],
      [14, 19, (1, 0), 1, 0, 0],
      [15, 19, (2, 0), 2, 0, 0],
      [15, 19, (1, 0), 1, 1, 0],
      [16, 20, (0, 1), 1, 1, 0], 
      [16, 21, (0, 1), 1, 1, 0], 
      [18, 20, (0, 1), 1, 1, 0], 
      [18, 21, (0, 1), 1, 1, 0],
      [17, 22, (0, 1), 1, 1, 0], 
      [17, 23, (0, 1), 1, 1, 0], 
      [19, 22, (0, 1), 1, 1, 0], 
      [19, 23, (0, 1), 1, 1, 0],  
      [20, 24, (2, 0), 2, 1, 0],
      [20, 26, (2, 0), 2, 1, 0],
      [20, 24, (1, 0), 1, 0, 0],
      [20, 26, (1, 0), 1, 0, 0],
      [21, 26, (2, 0), 2, 0, 0],
      [21, 26, (1, 0), 1, 1, 0],
      [22, 25, (2, 0), 2, 1, 0],
      [22, 27, (2, 0), 2, 1, 0],
      [22, 25, (1, 0), 1, 0, 0],
      [22, 27, (1, 0), 1, 0, 0],
      [23, 27, (2, 0), 2, 0, 0],
      [23, 27, (1, 0), 1, 1, 0]
    ],
    'init_config': [0 for x in range(28)],
    'rule_status': [-1 for x in range(60)],
    'input_neurons': [0, 1, 2, 3],
    'output_neurons': [24, 25, 26, 27]
}